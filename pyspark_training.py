# -*- coding: utf-8 -*-
"""pyspark-training.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mXYddX5bx9bGpzpNWEKEcG36Bt-ZSd5k
"""

!apt-get install openjdk-8-jdk-headless -qq > /dev/null
!wget -q http://archive.apache.org/dist/spark/spark-3.1.1/spark-3.1.1-bin-hadoop3.2.tgz
!tar xf spark-3.1.1-bin-hadoop3.2.tgz
!pip install -q findspark
import os
os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"
os.environ["SPARK_HOME"] = "/content/spark-3.1.1-bin-hadoop3.2"
import findspark
findspark.init()
from pyspark.sql import SparkSession
spark = SparkSession.builder.master("local[*]").getOrCreate()
spark

mydata = spark.read.format("csv").option("header","true").load("original.csv")
mydata.show()

from pyspark.sql.functions import *
mydata2 = mydata.withColumn("clean_city", when(mydata.City.isNull(), 'Unknown').otherwise(mydata.City))
mydata2.show()

mydata2 = mydata2.filter(mydata2.JobTitle.isNotNull())
mydata2.show()

mydata2 = mydata2.withColumn("clean_salary", mydata2.Salary.substr(2,100).cast('float'))
mydata2.show()

from pyspark.sql.functions import lit
mean = mydata2.groupBy().avg('clean_salary')
mean.show()

mean = mydata2.groupby().avg('clean_salary').take(1)[0][0]
mydata2.show()

mydata2 = mydata2.withColumn('new_salary', when(mydata2.clean_salary.isNull(), lit(mean)).otherwise(mydata2.clean_salary))
mydata2.show()

import numpy as np
latitudes = mydata2.select('Latitude')
latitudes.show()

latitudes = latitudes.filter(latitudes.Latitude.isNotNull())
latitudes.show()

latitudes =latitudes.withColumn('latitude2', latitudes.Latitude.cast('float')).select('latitude2')
latitudes.show()

median = np.median(latitudes.collect())
print(median)

mydata2 = mydata2.withColumn('lat', when(mydata2.Latitude.isNull(), lit(median)).otherwise(mydata2.Latitude))
mydata2.show()

import pyspark.sql.functions as sqlfunc
genders = mydata2.groupby('gender').agg(sqlfunc.avg('new_salary').alias('AvgSalary'))
genders.show()

df = mydata2.withColumn('female_salary', when(mydata2.gender == 'Female', mydata2.new_salary).otherwise(lit(0)))
df = df.withColumn('male_salary', when(mydata2.gender == 'Male', mydata2.new_salary).otherwise(lit(0)))
df.show()

df = df.groupBy('JobTitle').agg(sqlfunc.avg('female_salary').alias('final_female_salary'), sqlfunc.avg('male_salary').alias('final_male_salary'))
df.show()

df = df.withColumn('delta', df.final_female_salary - df.final_male_salary)
df.show()

cityavg = mydata2.groupBy('City').agg(sqlfunc.avg('new_salary').alias('avg_salary'))

cityavg.show()

cityavg = cityavg.sort(col('avg_salary').desc())
cityavg.show()

